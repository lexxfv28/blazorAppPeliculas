@page "/counter"
@inject ServicioSingleton singleton
@inject ServicioTransient transient
@inject IJSRuntime js

<h1 style="color: @color">Counter</h1>

<p>Current count: @currentCount</p>
<p>Current count: @singleton.valor</p>
<p>Current count: @transient.valor</p>

<button class="btn btn-primary" @onclick="IncrementCount">Click me</button>

<button class="btn btn-primary" @onclick="IncrementCountJS">Click me js</button>

@code {

    [CascadingParameter(Name = "color")] protected string color { get; set; }

    private int currentCount = 0;
    public static int currentCountStatic = 0;

    // IJSObjectReference modulo;

    [JSInvokable]
    public async Task IncrementCount()
    {



        currentCount++;
        currentCountStatic++;
        singleton.valor = currentCount;
        transient.valor = currentCount;

        await js.InvokeVoidAsync("pruebaONetStatic");
    }

    protected async Task IncrementCountJS()
    {
        await js.InvokeVoidAsync("pruebaDoteNetInstancia",
                DotNetObjectReference.Create(this)
            );
    }

    [JSInvokable]
    public static Task<int> obtenerCurrentCount()
    {
        return Task.FromResult(currentCountStatic);
    }

}
